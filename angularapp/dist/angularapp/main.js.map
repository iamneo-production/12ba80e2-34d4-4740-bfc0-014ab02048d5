{"version":3,"sources":["./src/app/components/signup/signup.component.ts","./src/app/components/signup/signup.component.html","./src/environments/environment.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/components/login/login.component.ts","./src/app/components/login/login.component.html","./src/app/app.module.ts","./src/app/components/navbar/navbar.component.ts","./src/app/components/navbar/navbar.component.html","./src/app/services/auth.service.ts","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { AuthService } from 'src/app/services/auth.service';\nimport { faExclamationTriangle,faEnvelope,faLock,faChessKing,faUser,faMobile } from '@fortawesome/free-solid-svg-icons';\nimport { stringify } from 'querystring';\nimport { ToastrService } from 'ngx-toastr';\n@Component({\n  selector: 'app-signup',\n  templateUrl: './signup.component.html',\n  styleUrls: ['./signup.component.css']\n})\nexport class SignupComponent implements OnInit {\n  signupForm: FormGroup;\n  confrimPassword:String;\n  password:string;\n  isMatched: boolean = true;\n  faChessKing=faChessKing;\n  faTriangleExclamation=faExclamationTriangle;\n  faEnvelope=faEnvelope;\n  faUser=faUser;\n  faMobile=faMobile;\n  faLock=faLock;\n  constructor(\n    private auth: AuthService,\n    private router: Router,\n    private notif:ToastrService\n    \n  ) {}\n  ngOnInit() {\n    this.signupForm = new FormGroup({\n      email: new FormControl(null, [Validators.required]),\n      password: new FormControl(null, [Validators.required]),\n      username: new FormControl(null),\n      userRole: new FormControl(null, [Validators.required]),\n      mobileNumber: new FormControl(null, [Validators.required]),\n      confrimPassword: new FormControl(null,[Validators.required]),\n    });\n  }\n\n  onSignup() {\n    if(this.signupForm.valid){\n      if(this.signupForm.get('userRole').value=='user'){\n      this.auth.userRegister(this.signupForm.value).subscribe(res=>{\n        this.router.navigate(['/login'])\n        this.notif.success(\"Success\",res.message,{timeOut:4000})\n      })\n    }else if(this.signupForm.get('userRole').value=='admin'){\n      this.auth.adminRegister(this.signupForm.value).subscribe(res=>{\n        this.router.navigate(['/login'])\n        this.notif.success(\"Success\",res.message,{timeOut:4000}) \n      })\n    }\n    }\n}\n}","<form [formGroup]=\"signupForm\">\n      <p id=\"welcome\" class=\"p-2 text-center fs-3\">\n        Create your account<fa-icon class=\"fs-1 ms-2\" [icon]=\"faChessKing\"></fa-icon>\n      </p>\n      <select\n        class=\"form-select mb-2\"\n        formControlName=\"userRole\"\n        aria-label=\"Default select example\"\n      >\n        <option selected [ngValue]=\"null\">Select Your Role</option>\n        <option value=\"admin\" id=\"admin\">Admin</option>\n        <option value=\"user\" id=\"user\">User</option>\n      </select>\n      <div class=\"row\">\n        <div class=\"col\">\n          <div class=\"input-group mb-3\">\n            <span class=\"input-group-text\"\n              ><fa-icon [icon]=\"faEnvelope\"></fa-icon>\n            </span>\n            <div class=\"form-floating\">\n              <input\n                type=\"email\"\n                class=\"form-control\"\n                placeholder=\"Email\"\n                formControlName=\"email\"\n                id=\"email\"\n              />\n              <label class=\"form-label\">Email</label>\n            </div>\n          </div>\n          <div\n            class=\"error\"\n            *ngIf=\"\n              signupForm.get('email').errors && signupForm.get('email').touched\n            \"\n          >\n            <fa-icon [icon]=\"faTriangleExclamation\"></fa-icon>\n            <p>Please enter your email !</p>\n          </div>\n        </div>\n        <div class=\"col\">\n          <div class=\"input-group mb-3\">\n            <span class=\"input-group-text\"\n              ><fa-icon [icon]=\"faUser\"></fa-icon>\n            </span>\n            <div class=\"form-floating\">\n              <input\n                type=\"text\"\n                class=\"form-control\"\n                placeholder=\"Username\" \n                formControlName=\"username\"\n                id=\"username\"\n              />\n              <label class=\"form-label\">Username</label>\n            </div>\n          </div>\n          <div\n            class=\"error\"\n            *ngIf=\"\n              signupForm.get('username').errors && signupForm.get('username').touched\n            \"\n          >\n            <fa-icon [icon]=\"faTriangleExclamation\"></fa-icon>\n            <p>Please enter your username !</p>\n          </div>\n        </div>\n      </div>\n  \n      <div class=\"input-group mb-3\">\n        <span class=\"input-group-text\"\n          ><fa-icon [icon]=\"faMobile\"></fa-icon\n        ></span>\n        <div class=\"form-floating\">\n          <input\n            type=\"text\"\n            class=\"form-control\"\n            placeholder=\"mobilenumber\"\n            formControlName=\"mobileNumber\"\n            id=\"mobileNumber\"\n          />\n          <label class=\"form-label\">Phone number</label>\n        </div>\n      </div>\n      <div\n        class=\"error\"\n        *ngIf=\"signupForm.get('mobileNumber').errors && signupForm.get('mobileNumber').touched\"\n      >\n        <fa-icon [icon]=\"faTriangleExclamation\"></fa-icon>\n        <p>Please enter your mobilenumber !</p>\n      </div>\n      <div class=\"input-group mb-3\">\n        <span class=\"input-group-text\"><fa-icon [icon]=\"faLock\"></fa-icon></span>\n        <div class=\"form-floating\">\n          <input\n            type=\"password\"\n            class=\"form-control\"\n            id=\"password\"\n            placeholder=\"Password\"\n            formControlName=\"password\"\n            [(ngModel)]=\"password\"\n          />\n          <label for=\"password\" class=\"form-label\">Password</label>\n        </div>\n      </div>\n      <div\n        class=\"error\"\n        *ngIf=\"\n          signupForm.get('password').errors && signupForm.get('password').touched\n        \"\n      >\n        <fa-icon [icon]=\"faTriangleExclamation\"></fa-icon>\n        <p class=\"error\">Please enter your password !</p>\n      </div>\n      <div class=\"input-group mb-3\">\n        <span class=\"input-group-text\"><fa-icon [icon]=\"faLock\"></fa-icon></span>\n        <div class=\"form-floating\">\n          <input\n            type=\"password\"\n            class=\"form-control\"\n            id=\"confirmPassword\"\n            placeholder=\"Confirm Password\"\n            formControlName=\"confrimPassword\"\n            [(ngModel)]=\"confrimPassword\"\n          />\n          <label for=\"confrimPassword\" class=\"form-label\">Confirm password</label>\n        </div>\n      </div>\n      <div class=\"error\">\n        <p class=\"error\"  *ngIf=\"password!=confrimPassword && signupForm.get('confrimPassword').touched\"><fa-icon [icon]=\"faTriangleExclamation\"></fa-icon> Password not matched!</p>\n        <p class=\"error\"  *ngIf=\"signupForm.get('confrimPassword').errors && signupForm.get('confrimPassword').touched\"><fa-icon [icon]=\"faTriangleExclamation\"></fa-icon> Please re-enter your password!</p>\n      </div>\n      <button type=\"submit\" id=\"submitButton\" (click)=\"onSignup()\" class=\"btn w-100\">\n        Sign Up\n      </button>\n      <p class=\"mt-3\">Already a user/admin ?  </p>\n      <button routerLink=\"/login\" id=\"signinLink\" class=\"btn w-50\">Login</button>\n    </form>\n  ","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  title = 'angularapp';\r\n}\r\n","<router-outlet></router-outlet>","import { Component,OnInit } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { faChessKnight,faEnvelope,faLock,faExclamationTriangle } from '@fortawesome/free-solid-svg-icons';\nimport { ToastrService } from 'ngx-toastr';\nimport { AuthService } from 'src/app/services/auth.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  faChessKnight=faChessKnight;\n  faEnvelope=faEnvelope;\n  faLock=faLock;\n  faTriangleExclamation=faExclamationTriangle;\n  loginForm: FormGroup;\n  constructor(private auth: AuthService, private router: Router,private notif:ToastrService) {}\n\n  ngOnInit() {\n    this.loginForm = new FormGroup({\n      email: new FormControl(null, [Validators.required]),\n      password: new FormControl(null, [Validators.required]),\n    });\n  }\n  async onLogin() {\n    if(this.loginForm.valid){\n      try {\n        this.auth.userLogin(this.loginForm.value).subscribe(res=>{\n          this.notif.success(\"Success\",res.Message,{timeOut:5000});\n        })\n      }catch(error){\n        try {\n          this.auth.adminLogin(this.loginForm.value).subscribe(res=>{\n            this.notif.success(\"Success\",res.Message,{timeOut:5000});\n          })\n        }catch(error){\n          console.log(error);\n        }\n      }\n    \n      \n    }\n  }\n}\n\n","\n    <form [formGroup]=\"loginForm\" (ngSubmit)=\"onLogin()\">\n      <p id=\"welcome\" class=\"p-2 text-center fs-3\">\n        Login Please\n        <fa-icon class=\"fs-1 ms-2\" [icon]=\"faChessKnight\"></fa-icon>\n      </p>\n      <div class=\"input-group mb-3\">\n        <span class=\"input-group-text\"\n          ><fa-icon [icon]=\"faEnvelope\"></fa-icon\n        ></span>\n        <div class=\"form-floating\">\n          <input\n            type=\"email\"\n            class=\"form-control\"\n            placeholder=\"Email\"\n            formControlName=\"email\"\n            id=\"email\"\n          />\n          <label class=\"form-label\">Email</label>\n        </div>\n      </div>\n      <div\n        class=\"error\"\n        *ngIf=\"loginForm.get('email').errors && loginForm.get('email').touched\"\n      >\n        <fa-icon [icon]=\"faTriangleExclamation\"></fa-icon>\n        <p>Please enter your email !</p>\n      </div>\n      <div class=\"input-group mb-3\">\n        <span class=\"input-group-text\"><fa-icon [icon]=\"faLock\"></fa-icon></span>\n        <div class=\"form-floating\">\n          <input\n            type=\"password\"\n            class=\"form-control\"\n            id=\"password\"\n            placeholder=\"Password\"\n            formControlName=\"password\"\n          />\n          <label for=\"password\" class=\"form-label\">Password</label>\n        </div>\n      </div>\n      <div\n        class=\"error\"\n        *ngIf=\"\n          loginForm.get('password').errors && loginForm.get('password').touched\n        \"\n      >\n        <fa-icon [icon]=\"faTriangleExclamation\"></fa-icon>\n        <p class=\"error\">Please enter your password !</p>\n      </div>\n      <button type=\"submit\" id=\"loginButton\" class=\"btn w-100\">\n        Login\n      </button>\n      <p class=\"mt-3\">New User/Admin ?</p>\n      <button routerLink=\"/signup\" id=\"signupLink\" class=\"btn\">Create new account</button>\n    </form>\n  ","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { SignupComponent } from './components/signup/signup.component';\r\nimport { LoginComponent } from './components/login/login.component';\r\nimport { NavbarComponent } from './components/navbar/navbar.component';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { ToastrModule } from 'ngx-toastr';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    SignupComponent,\r\n    LoginComponent,\r\n    NavbarComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    ReactiveFormsModule,\r\n    FormsModule,\r\n    FontAwesomeModule,\r\n    HttpClientModule,\r\n    ToastrModule.forRoot(),\r\n    \r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.css']\n})\nexport class NavbarComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>navbar works!</p>\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n  constructor(private http:HttpClient) { }\n  private baseURL:string=\"https://8080-ecaffdaacfaecfeafbbfadbbbebdcecdaababeda.project.examly.io/api/Auth\";\n\n  userRegister(data:any){\n    return this.http.post<any>(`${this.baseURL}/userRegister`,data);\n  }\n  adminRegister(data:any){\n    return this.http.post<any>(`${this.baseURL}/adminRegister`,data);\n  }\n  userLogin(data:any){\n    return this.http.post<any>(`${this.baseURL}/userLogin`,data);\n  }\n  adminLogin(data:any){\n    return this.http.post<any>(`${this.baseURL}/adminLogin`,data);\n  }\n}\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { LoginComponent } from './components/login/login.component';\r\nimport { SignupComponent } from './components/signup/signup.component';\r\n\r\nconst routes: Routes = [\r\n  {path:'', redirectTo:'login',pathMatch:'full'},\r\n  {path:'login',component:LoginComponent},\r\n  {path:'signup',component:SignupComponent},\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}